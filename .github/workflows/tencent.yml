#这个工作流程将构建一个 docker 容器，当自动化到“主”分支时，将其发布并部署到腾讯 Kubernetes Engine (TKE)。
#
# 配置此工作流程：
#
# 1.确定您的存储库包含腾讯 Kubernetes Engine 集群所需的配置，
# 包括deployment.yml、kustomization.yml、service.yml等。
#
# 2. 在您的工作空间中设置机密：
# - TENENT_CLOUD_SECRET_ID 为腾讯云秘密ID
# - TENENT_CLOUD_SECRET_KEY 为腾讯云秘钥
# - TENENT_CLOUD_ACCOUNT_ID 为腾讯云账号ID
# - TKE_REGISTRY_PASSWORD 包含TKE外部密码
#
# 3. 更改 TKE_IMAGE_URL、TKE_REGION、TKE_CLUSTER_ID 和 DEPLOYMENT_NAME 环境变量的值（如下）。

名称：腾讯引擎Kubernetes

在：
  推：
    分支：[ “主要” ]

# 此工作流程中所有作业和步骤可用的环境变量
环境：
  TKE_IMAGE_URL：ccr.ccs.tencentyun.com/demo/mywebapp
  TKE_REGION : ap-广州
  TKE_CLUSTER_ID：cls-mywebapp
  DEPLOYMENT_NAME：tke-测试

权限：
  内容： 阅读

工作：
  设置-构建-发布-部署：
    名称：设置、构建、发布和部署
    运行：ubuntu-latest
    环境：生产
    脚步：

    -姓名：- 名称：结帐
      uses:       使用：actions/checkout@v3

    ＃ 建造# Build
    - name:     - 名称：构建 Docker 镜像
      run: |
        docker build -t ${TKE_IMAGE_URL}:${GITHUB_SHA} .

    - name:     - 名称：登录 TKE 注册中心
      run: |
        docker login -u ${{ secrets.TENCENT_CLOUD_ACCOUNT_ID }} -p '${{ secrets.TKE_REGISTRY_PASSWORD }}' ${TKE_IMAGE_URL}

    # 将 Docker 镜像推送到 TKE 镜像仓库# Push the Docker image to TKE Registry
    - name:     - 名称：发布
      run: |
        docker push ${TKE_IMAGE_URL}:${GITHUB_SHA}

    - name:     - 名称：设置 Kustomize
      运行：|
        卷曲-o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    - name: Set up ~/.kube/config for connecting TKE cluster
      uses: TencentCloud/tke-cluster-credential-action@v1
      with:
        secret_id: ${{ secrets.TENCENT_CLOUD_SECRET_ID }}
        secret_key: ${{ secrets.TENCENT_CLOUD_SECRET_KEY }}
        tke_region: ${{ env.TKE_REGION }}
        cluster_id: ${{ env.TKE_CLUSTER_ID }}

    - name: Switch to TKE context
      run: |
        kubectl config use-context ${TKE_CLUSTER_ID}-context-default

    # Deploy the Docker image to the TKE cluster
    - name: Deploy
      run: |
        ./kustomize 编辑设置图像 ${TKE_IMAGE_URL}:${GITHUB_SHA}
        ./kustomize 构建 . | kubectl 应用-f-
        kubectl 部署状态部署/${DEPLOYMENT_NAME}
        kubectl 获取服务 -o Wide
